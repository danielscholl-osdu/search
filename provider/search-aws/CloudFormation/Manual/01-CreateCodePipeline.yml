# Copyright Â© Amazon Web Services
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: 2010-09-09
Description: >
  This CloudFormation script creates the deployment pipeline for OSDU's Search
  Service. The CodePipeline should automatically trigger whenever commits are
  made on the tracked branch. The start and end of the CodePipeline should
  trigger a SNS alert to keep track of when the deployment has started and when
  it finishes.
Parameters:
  Environment:
    Description: Environment Name. Defaults to 'dev'. Can only be dev/uat/prod.
    Type: String
    AllowedValues:
      - dev
      - uat
      - prod
    Default: dev

  DeploymentRegion:
    Description: The AWS region to deploy the application to. The default is us-east-1.
    Type: String
    Default: us-east-1

  SNSNotificationEmail:
    Description: The email address to send SNS notifications about the build to.
    Type: String
    Default: barclay.walsh@parivedasolutions.com

  CodeCommitRepositoryName:
    Description: >-
      The name of the Code Commit Repository that the CodePipeline source is
      connected to.
    Type: String
    Default: os-search

  CodeCommitBranchName:
    Description: >-
      The name of the Code Commit branch that the CodePipeline source is
      connected to.
    Type: String
    Default: dev

  MasterStackName:
    Description: The name of the master stack that is being deployed by the CodePipeline.
    Type: String
    Default: os-search-master-stack

  MasterTemplateName:
    Description: >-
      The name of the master template that is called when creating the master
      stack.
    Type: String
    Default: provider/search-aws/CloudFormation/Master/os-search-master.yml

  CursorCacheName:
    Description: The name of the cache cluster for the cursor cache. Needs to match the value in the environment params JSON. Will be prefixed with the environment name.
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_-]*$"
    ConstraintDescription: Must start with a letter. Only numbers, letters, -, and _ accepted. Max. length 64 characters.
    Default: searchCursorCache

  IndexCacheName:
    Description: The name of the cache cluster for the index cache. Needs to match the value in the environment params JSON. Will be prefixed with the environment name.
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_-]*$"
    ConstraintDescription: Must start with a letter. Only numbers, letters, -, and _ accepted. Max. length 64 characters.
    Default: searchIndexCache

Resources:

  ArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      VersioningConfiguration:
        Status: Enabled

  ArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ArtifactStoreBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:*'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:s3:::${ArtifactStoreBucket}'
              - !Sub 'arn:aws:s3:::${ArtifactStoreBucket}/*'
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
                - !ImportValue
                  'Fn::Sub': '${Environment}-CodeBuildRoleArn'
                - !ImportValue
                  'Fn::Sub': '${Environment}-PipelineRoleArn'
                - !ImportValue
                  'Fn::Sub': '${Environment}-CFNRoleArn'

  CachingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CachingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CachingBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${CachingBucket}
              - !Sub arn:aws:s3:::${CachingBucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !ImportValue
                  'Fn::Sub': '${Environment}-CodeBuildRoleArn'
                - !ImportValue
                  'Fn::Sub': '${Environment}-PipelineRoleArn'
                - !ImportValue
                  'Fn::Sub': '${Environment}-CFNRoleArn'

  SNSCodePipelineDeploymentFailed:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref SNSNotificationEmail
          Protocol: email
      TopicName: !Sub '${Environment}-OS-Search-Deployment-CodePipeline-Failed'

  EventRuleCodePipelineFailed:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: Triggered whenever the CodePipeline deployment stage has failed.
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Stage Execution State Change
        detail:
          state:
            - FAILED
          pipeline:
            - !Sub '${Environment}-OSDU-OS-Search-CodePipeline'
      Name: !Sub '${Environment}-CodePipelineEventRule-${CodeCommitRepositoryName}'
      Targets:
        - Arn: !Ref SNSCodePipelineDeploymentFailed
          Id: Deployment-CodePipeline-Failed
          InputTransformer:
            InputPathsMap:
              pipeline: $.detail.pipeline
            InputTemplate: '"The Pipeline <pipeline> has failed."'

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      Name: !Sub '${Environment}-OSDU-OS-Search-CodePipeline'
      RoleArn: !ImportValue
        'Fn::Sub': '${Environment}-PipelineRoleArn'
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: !Ref CodeCommitBranchName
                RepositoryName: !Ref CodeCommitRepositoryName
              OutputArtifacts:
                - Name: Source
              RunOrder: '1'
        - Name: Pre-Deployment-CodeBuild
          Actions:
            - Name: Pre-Deployment-CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Pre-Deployment-CodeBuild
              Configuration:
                ProjectName: !Ref PreDeploymentCodeBuild
              RunOrder: '2'
        - Name: Deployment
          Actions:
            - Name: CloudFormation-Deployment-Master
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: Source
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !ImportValue
                  'Fn::Sub': '${Environment}-CFNRoleArn'
                StackName: !Sub '${Environment}-${MasterStackName}'
                TemplatePath: !Sub 'Source::${MasterTemplateName}'
                TemplateConfiguration: !Sub >-
                  Source::provider/search-aws/CloudFormation/Params/${Environment}.template_configuration.json
              RunOrder: '3'
        - Name: Post-Deployment-CodeBuild
          Actions:
            - Name: Post-Deployment-CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Post-Deployment-CodeBuild
              Configuration:
                ProjectName: !Ref PostDeploymentCodeBuild
              RunOrder: '4'

  PreDeploymentCodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${Environment}-pre-deployment-codebuild-${CodeCommitRepositoryName}'
      Description: CodeBuild commands which run prior to the CloudFormation deployment.
      ServiceRole: !ImportValue
        'Fn::Sub': '${Environment}-CodeBuildRoleArn'
      Artifacts:
        Type: S3
        Location: !Ref ArtifactStoreBucket
        Name: !Sub '${Environment}-pre-deployment-codebuild'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: !Ref Environment
          - Name: AWS_ACCOUNT_NUMBER
            Type: PLAINTEXT
            Value: !Ref 'AWS::AccountId'
          - Name: AWS_REGION
            Type: PLAINTEXT
            Value: !Ref DeploymentRegion
          - Name: CFN_S3_BUCKET
            Type: PLAINTEXT
            Value: !ImportValue
              'Fn::Sub': '${Environment}-S3BucketCloudFormation'
          - Name: APPLICATION_NAME
            Type: PLAINTEXT
            Value: !Ref CodeCommitRepositoryName
        PrivilegedMode: false
      Source:
        BuildSpec: ./provider/search-aws/buildspec-pre-deploy.yml
        Location: !Sub >-
          https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${CodeCommitRepositoryName}
        Type: CODECOMMIT
      TimeoutInMinutes: 15

  PostDeploymentCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${Environment}-post-deployment-codebuild-${CodeCommitRepositoryName}
      Description: CodeBuild commands which run after the CloudFormation deployment.
      ServiceRole: !ImportValue
        'Fn::Sub': '${Environment}-CodeBuildRoleArn'
      Artifacts:
        Type: S3
        Location: !Ref ArtifactStoreBucket
        Name: !Sub ${Environment}-post-deployment-codebuild
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: !Ref Environment
          - Name: AWS_ACCOUNT_NUMBER
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Type: PLAINTEXT
            Value: !Ref DeploymentRegion
          - Name: VSTS_FEED_USER
            Type: PLAINTEXT
            Value: '{{resolve:secretsmanager:dev-VSTSFeedToken:SecretString:vsts_feed_user}}'
          - Name: VSTS_FEED_TOKEN
            Type: PLAINTEXT
            Value: '{{resolve:secretsmanager:dev-VSTSFeedToken:SecretString:vsts_feed_token}}'
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: !Sub ${Environment}-${CodeCommitRepositoryName}-repository
          - Name: CURSOR_CACHE_NAME
            Type: PLAINTEXT
            Value: !Ref CursorCacheName
          - Name: INDEX_CACHE_NAME
            Type: PLAINTEXT
            Value: !Ref IndexCacheName
          - Name: APPLICATION_NAME
            Type: PLAINTEXT
            Value: !Ref CodeCommitRepositoryName
          - Name: M2_REPO_S3_BUCKET
            Type: PLAINTEXT
            Value: !Sub "${Environment}-${AWS::AccountId}-persistent-maven-m2-bucket"
        PrivilegedMode: true
      Source:
        BuildSpec: ./provider/search-aws/buildspec-post-deploy.yml
        Location: !Sub https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${CodeCommitRepositoryName}
        Type: CODECOMMIT
      Cache:
        Type: S3
        Location: !Sub ${CachingBucket}/${Environment}
      TimeoutInMinutes: 15
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub "${Environment}-OSDU-CodeBuildSecurityGroup"
        Subnets:
          - Fn::ImportValue:
              !Sub "${Environment}-OSDU-PrivateSubnet-AZ1"
          - Fn::ImportValue:
              !Sub "${Environment}-OSDU-PrivateSubnet-AZ2"
        VpcId:
          Fn::ImportValue:
            !Sub "${Environment}-OSDU-VPC"