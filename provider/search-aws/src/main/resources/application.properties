# Copyright Â© Amazon Web Services
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

LOG_PREFIX=search

server.servlet.contextPath=/api/search/v2/
AUTHORIZE_API=${ENTITLEMENTS_BASE_URL}/api/entitlements/v2

logging.level.org.springframework.web=${LOG_LEVEL:INFO}
server.port=${APPLICATION_PORT:8080}

## AWS ElastiCache configuration
aws.elasticache.cluster.cursor.endpoint=${CACHE_CLUSTER_ENDPOINT:null}
aws.elasticache.cluster.cursor.port=${CACHE_CLUSTER_PORT:null}
aws.elasticache.cluster.cursor.key=${CACHE_CLUSTER_KEY:null}
aws.elasticache.cluster.cursor.expiration=60
aws.elasticache.cluster.index.endpoint=${CACHE_CLUSTER_ENDPOINT:null}
aws.elasticache.cluster.index.port=${CACHE_CLUSTER_PORT:null}
aws.elasticache.cluster.index.expiration=60
aws.elasticache.cluster.index.key=${CACHE_CLUSTER_KEY:null}
## Default Elasticsearch Settings
aws.es.host=${ELASTIC_HOST:}
aws.es.port=${ELASTIC_PORT:0}
aws.es.isHttps=${ELASTIC_HTTPS:true}
aws.es.username=${ELASTIC_USERNAME:empty}
aws.es.password=${ELASTIC_PASSWORD:empty}
aws.region=${AWS_REGION}
aws.es.serviceName=es
aws.es.certificate.disableTrust=${ELASTIC_DISABLE_CERTIFICATE_TRUST:false}

# AWS user agent variables
aws.disableUserAgent=${DISABLE_USER_AGENT}
aws.osduVersion=${OSDU_VERSION}

## AWS Lambda configuration
aws.lambda.get-groups-function-name=${OSDU_INSTANCE_NAME}-os-entitlements-GroupsFunction
# Azure search query properties
QUERY_DEFAULT_LIMIT=10
QUERY_LIMIT_MAXIMUM=1000
AGGREGATION_SIZE=1000

awsParameterStorePropertySource.enabled=true

aws.ssm=${SSM_ENABLED}

server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${SSL_KEY_STORE_PATH:/certs/osduonaws.p12}
server.ssl.key-alias=${SSL_KEY_ALIAS:osduonaws}
server.ssl.key-password=${SSL_KEY_PASSWORD:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}

# Policy service properties
featureFlag.policy.enabled=${POLICY_SERVICE_ENABLED:true}
service.policy.endpoint=${POLICY_BASE_URL}/api/policy/v1
service.policy.id=osdu.partition["%s"].search
service.policy.cache.timeout=${POLICY_CACHE_TIMEOUT}
PARTITION_API=${PARTITION_BASE_URL}/api/partition/v1

validation.spatial.longitude.enableExtendedRange=true

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

# autocomplete feature flag name
featureFlag.strategy=appProperty
featureFlag.autocomplete.enabled=true

#Collaboration context feature flag name : properties specific
collaborations-enabled=true
