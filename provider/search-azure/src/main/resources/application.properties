#  Copyright Â© Microsoft Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

LOG_PREFIX=search

server.servlet.contextPath=/api/search/v2/
logging.level.org.springframework.web=${search_service_spring_logging_level:INFO}
server.port=${search.service.port}
spring.data.redis.repositories.enabled = false

AUTHORIZE_API=${entitlements_service_endpoint}
AUTHORIZE_API_KEY=${entitlements_service_api_key}

azure.search.container=SearchSettings

# Partition Service configuration
PARTITION_API=${partition_service_endpoint}
azure.activedirectory.app-resource-id=${aad_client_id}

# Azure AD configuration, commented below settings to disable AAD AuthN ,
#Uncomment it In the Istio AUTHN disabled Scenario
#azure.activedirectory.client-id=${aad_client_id}
#azure.activedirectory.AppIdUri=api://${aad_client_id}
#azure.activedirectory.session-stateless=true

# Istio Auth Enabled
azure.istio.auth.enabled=${azure_istioauth_enabled}

# Azure CosmosDB configuration
azure.cosmosdb.database=${cosmosdb_database}

# Azure KeyVault configuration
azure.keyvault.url=${KEYVAULT_URI}

# Azure Search query properties
QUERY_DEFAULT_LIMIT=10
QUERY_LIMIT_MAXIMUM=1000
AGGREGATION_SIZE=1000

logging.slf4jlogger.enabled=true
logging.transaction.enabled=true
logging.mdccontext.enabled=true
logging.ignore.servlet.paths=/actuator/health

#TenantFactory Configuration
tenantFactoryImpl.required=true
tenantInfo.container.name=TenantInfo

# Cache configuration, provider [vm, redis]
cache.provider=redis

# VM
elastic.cursor.expiration=${ELASTIC_CACHE_EXPIRATION}
elastic.cache.maxSize=${MAX_CACHE_VALUE_SIZE}
group.cache.expiration=5
group.cache.maxSize=1000
elastic.latency.log.enabled=false
elastic.latency.log.threshold=200
disable.default.query.performance.logger=true

# Redis
redis.port=6380
redis.expiration=3600
redis.ssl.enabled=true
redis.database=${REDIS_DATABASE}

# Health checks
management.server.port=8081
management.health.redis.enabled=false
management.health.elasticsearch.enabled=false
management.health.azure-key-vault.enabled=false
azure.health.endpoint.enabled=true

management.endpoints.web.exposure.include=${web_exposure_endpoints:health,info}
management.metrics.enable.all=${enable_metrics:false}

# Policy service properties
service.policy.enabled=true
service.policy.endpoint=${policy_service_endpoint}
policy.cache.timeout=5
service.policy.id=${service_policy_id:osdu.partition["%s"].search}

validation.spatial.longitude.enableExtendedRange=true
redis.command.timeout=5
