apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ibm-search-service-deploy.fullname" . }}
  labels:
    {{- include "ibm-search-service-deploy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ibm-search-service-deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ibm-search-service-deploy.selectorLabels" . | nindent 8 }}
        sidecar.istio.io/inject: "{{ .Values.sidecarIstioInjected }}"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ibm-search-service-deploy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
# added from partition:
      initContainers:
        - name: {{ .Values.initimage.name }}
          image: {{ .Values.initimage.initrepository }}:{{ .Values.initimage.tag }}
          imagePullPolicy: {{ .Values.initimage.pullPolicy }}
          command: ['sh', '-c', './health_probe.sh $(HEALTH_URI)/info && sleep 5']
          env:
            - name: HEALTH_URI
              valueFrom:
                configMapKeyRef:
                  name: search-config
                  key: AUTHORIZE_API
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:	
# added from partition:
            - name: ibm.db.password	
              valueFrom:	
                secretKeyRef:	
                  key: adminPassword	
                  name: {{ .Release.Name }}-couchdb
            - name: partition.keycloak.client_secert
              valueFrom:
                secretKeyRef:
                  key: partition_service_secret_data
                  name: props-secret-generated-password
            - name: partition.keycloak.url
              valueFrom:
                configMapKeyRef:
                  key: partition.keycloak.url
                  name: partition-config
            - name: ELASTIC_PASSWORD
              valueFrom:	
                secretKeyRef:	
                  key: password	
                  name: elasticsearch-master-credentials
            - name: ELASTIC_USER_PASSWORD
              value: elastic:$(ELASTIC_PASSWORD)                  
          envFrom:	
          - configMapRef:	
              name: "{{ .Values.conf.configmap }}"
#######################
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
# removed because was removed in partition:
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
